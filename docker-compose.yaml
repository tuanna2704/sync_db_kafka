version: '2'
services:
  zookeeper:
    image: debezium/zookeeper:1.1
    container_name: zookeeper
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: debezium/kafka:1.1
    container_name: kafka
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - BROKER_ID=1
  postgres:
    image: debezium/postgres:12
    container_name: postgres
    ports:
     - 5432:5432
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
    volumes: 
     # copy the sql script to create tables
     - ./create_main_db.sql:/docker-entrypoint-initdb.d/create_main_db.sql
  connect:
    image: debezium/connect:1.1
    container_name: connect
    ports:
     - 8083:8083
    links:
     - kafka
     - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=sde_group
     - CONFIG_STORAGE_TOPIC=sde_storage_topic
     - OFFSET_STORAGE_TOPIC=sde_offset_topic
  webapp:
    build: .
    container_name: webapp
    command: tail -f /dev/null
    ports: 
     - 8080:8080
    links:
     - kafka
     - postgres_microservice
  postgres_microservice:
    image: postgres:12
    container_name: postgres_microservice
    ports:
     - 5433:5432
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
    # volumes: 
    #  # copy the sql script to create tables
    #  - ./create_microservice_db.sql:/docker-entrypoint-initdb.d/create_microservice_db.sql
